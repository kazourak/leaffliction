# .github/workflows/development.yml
name: Development pipeline

on:
  push:

jobs:
  create-virtualenv:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - run: pip install -r requirements.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

  test:
    runs-on: ubuntu-latest
    needs: create-virtualenv

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv


      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests

      - name: Run Flake8
        run: |
          flake8 leaffliction  --disable-noqa

  data:
    runs-on: ubuntu-latest
    needs: create-virtualenv

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - name: Import_data
        run: |
          source .venv/bin/activate
          make data

      - name: Improve_dataset
        run: |
          mkdir data/processed
          python leaffliction/tools/improve_dataset.py data/external/images data/processed/augmented/

  train:
    runs-on: ubuntu-latest
    needs: [data]
    if: contains(github.event.head_commit.message, '--train_model')

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - name: Train_model
        run: |
          mkdir data/model
          python leaffliction/train.py data/processed/augmented --epoch 20 --plot --save_mode --batch_ratio 0.8 --save_dir data/model
          

  compress:
    runs-on: ubuntu-latest
    needs: data

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Restore pip dependencies from cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Restore virtual environment
        run: |
          cp -r ../venv_cache .venv
          source .venv/bin/activate

      - name: Zip_data
        run: |
          source .venv/bin/activate
          mkdir artifact_save
          zip -r artifact_save/data.zip data


  save_artifact:
    runs-on: ubuntu-latest
    needs: [compress]
    if: contains(github.event.head_commit.message, '--artifact_save')

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Restore pip dependencies from cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Restore virtual environment
        run: |
          cp -r ../venv_cache .venv
          source .venv/bin/activate

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: artifact_save/
