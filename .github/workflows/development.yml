# .github/workflows/development.yml
name: Development pipeline

on:
  push:

jobs:
  create-virtualenv:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - run: pip install -r requirements.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

  verify:
    runs-on: ubuntu-22.04
    needs: create-virtualenv

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - name: Run Flake8
        run: |
          flake8 leaffliction --disable-noqa --config setup.cfg

  data:
    runs-on: ubuntu-22.04
    needs: verify

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - name: Import_data
        run: |
          make data

      - name: Improve_dataset
        run: |
          mkdir -p data/processed
          python leaffliction/Balance.py data/external/images data/processed/augmented/ --multiply_factor 3

      - name: Zip_data
        run: |
          mkdir -p data_artifact
          zip -r data_artifact/data.zip data

      - name: push zip and shasum
        if: ${{ success() }}
        run: |
          shasum data_artifact/data.zip > data_artifact/sha.txt

        continue-on-error: true

      - name: Upload data directory
        uses: actions/upload-artifact@v4
        with:
          name: data-artifact
          path: data_artifact

  train:
    runs-on: ubuntu-22.04
    needs: [data]
    if: contains(github.event.head_commit.message, '--train_model')

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - name: Download data artifact
        uses: actions/download-artifact@v4
        with:
          name: data-artifact
          path: data_artifact

      - name: Unzip data artifact
        run: |
          unzip data_artifact/data.zip -d data

      - name: Train_model
        run: |
          mkdir -p data/model
          python leaffliction/train.py data/processed/augmented --epoch 20 --plot --save_mode --batch_ratio 0.8 --save_dir data/model

      - name: Zip_data
        run: |
          mkdir -p train_artifact
          zip -r train_artifact/train.zip data

      - name: Upload data directory
        uses: actions/upload-artifact@v4
        with:
          name: train-artifact
          path: train_artifact

  build_docs:
    runs-on: ubuntu-22.04
    needs: create-virtualenv
    if: github.ref == 'refs/heads/development'

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - name: Build documentation
        id: docs_build
        run: |
          make build_docs

      - name: Upload documentation as artifact
        id: docs_artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apidocs/

  deploy_docs:
    runs-on: ubuntu-22.04
    needs: build_docs
    if: github.ref == 'refs/heads/development'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
